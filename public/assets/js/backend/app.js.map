{"version":3,"sources":["app.js"],"names":[],"mappingsfile":"app.js","sourcesContent":["angular.module('backend', [\n    'ui.bootstrap',\n    'angular-loading-bar',\n    'ngFileUpload',\n    'textAngular',\n    'ngTagsInput',\n    'ngSanitize',\n    'ui.select',\n    'ckeditor',\n    'angularLazyImg'\n]).value('admin_path', '/controlcenter');\n\n/*******************************************************************\n\t\t\t\t\t\tControllers\n*******************************************************************/\n\n// Admin Controller\nangular.module('backend').controller('adminController', ['$scope', '$http', '$window', '$log', 'admin_path', 'Upload', '$timeout', '$uibModal',\n    function($scope, $http, $window, $log, admin_path, Upload, $timeout, $uibModal) {\n\n        $scope.villas = {};\n        $scope.villaList = [];\n        $scope.offersVilla = [];\n        $scope.reviewsVilla = [];\n        $scope.testimonialVilla = [];\n        $scope.offersList = [];\n        $scope.bedroom = {};\n        $scope.bedroomList = [];\n        $scope.formData = {};\n        $scope.environmentList = [];\n        $scope.seasonList = [];\n        $scope.galleryGroupList = [];\n        $scope.galleryList = [];\n        $scope.areaList = [];\n        $scope.contentSuccess = false;\n        $scope.contentFailed = false;\n        $scope.rateVillas = [];\n        $scope.villaBedroomList = [];\n        $scope.itemRate = [];\n        $scope.itemGallery = [];\n        $scope.numSeasons = 0;\n        $scope.rate = {};\n        $scope.existBedroomSeason = false;\n        $scope.rateFailed = true;\n        $scope.rateSuccess = true;\n        $scope.ifImages = true;\n        $scope.offers = {};\n        $scope.reviews = {};\n\n        $scope.languageList = [];\n        $scope.contentFormatList = [];\n        $scope.formatRightList = [];\n        $scope.countryList = [];\n\n        $scope.multipleBedroom = {};\n        $scope.statusList = [{ \"value\": \"draft\", \"title\": \"draft\" }, { \"value\": \"live\", \"title\": \"live\" }];\n        $scope.reviewsType = [{ \"value\": \"manual\", \"title\": \"Manual\" }, { \"value\": \"auto\", \"title\": \"Auto\" }];\n        $scope.villas.Status = 'draft';\n\n        $scope.isAdvancedSearch = false;\n\n        $scope.advancedSearch = function() {\n\n            $scope.isAdvancedSearch = true;\n\n        }\n\n        $scope.maxDate = $scope.maxDate ? null : new Date();\n\n        $scope.openStart = function($event) {\n            $event.preventDefault();\n            $event.stopPropagation();\n            $scope.datepicker = { 'openStart': true };\n        };\n\n        $scope.endStart = function($event) {\n            $event.preventDefault();\n            $event.stopPropagation();\n            $scope.datepicker = { 'endStart': true };\n        };\n\n        $scope.dateOptions = {\n            formatYear: 'yy',\n            startingDay: 1\n        };\n\n        $scope.intro = {\n            language: 'en',\n            allowedContent: true,\n            entities: false\n        };\n\n        $scope.description = {\n            language: 'en',\n            allowedContent: true,\n            entities: false\n        };\n\n        $scope.services = {\n            language: 'en',\n            allowedContent: true,\n            entities: false\n        };\n\n        $scope.facilities = {\n            language: 'en',\n            allowedContent: true,\n            entities: false\n        };\n\n        $scope.staff_detail = {\n            language: 'en',\n            allowedContent: true,\n            entities: false\n        };\n\n        $scope.term_condition = {\n            language: 'en',\n            allowedContent: true,\n            entities: false\n        };\n\n        $scope.ReviewsComment = {\n            language: 'en',\n            allowedContent: true,\n            entities: false\n        };\n\n        $scope.TestimonialComment = {\n            language: 'en',\n            allowedContent: true,\n            entities: false\n        };\n\n\n        // ********************* Bedroom ********************************* //\n\n\n        // Get Bedroom List for villa input\n        $scope.getBedrooms = function() {\n\n            $http({\n                method: 'GET',\n                url: admin_path + '/api/bedroom'\n            }).then(function successCallback(data) {\n                $log.info(data.data);\n                angular.forEach(data.data, function(value, key) {\n                    $scope.bedroomList.push({ id: value.id, title: value.title, number: value.number });\n                });\n                // $log.info($scope.bedroomList);\n            }, function errorCallback(response) {\n                $log.info(response);\n            });\n            $scope.multipleBedroom.selectedItem = $scope.bedroomList[0];\n        };\n\n\n        $scope.getVillaRateList = function(id) {\n\n            $http({\n                method: 'GET',\n                url: admin_path + '/api/rates/' + id + '/villa'\n            }).then(function successCallback(data) {\n                $log.info(data.data);\n                angular.forEach(data.data, function(value, key) {\n                    $scope.itemRate.push({\n                        VillaId: value.VillaId,\n                        Bedroom: value.Bedroom,\n                        Season: value.Season,\n                        StartDate: value.StartDate,\n                        EndDate: value.EndDate,\n                        MinimumStay: value.MinimumStay,\n                        Tax: value.Tax,\n                        Plus: value.Plus,\n                        Rate: value.Rate,\n                        SeasonTitle: value.SeasonTitle,\n                        BedroomTitle: value.BedroomTitle,\n                        RateId: value.RateId,\n                    });\n                });\n\n            }, function errorCallback(response) {\n                $log.info(response);\n            });\n\n        }\n\n        // Get Seasons\n        $scope.getSeasons = function() {\n\n            $http({\n                method: 'GET',\n                url: admin_path + '/api/season'\n            }).then(function successCallback(data) {\n                angular.forEach(data.data.season, function(value, key) {\n                    $scope.seasonList.push({ id: value.id, title: value.title });\n                });\n                $scope.numSeasons = data.data.numseasons;\n            }, function errorCallback(response) {\n                $log.info(response);\n            });\n\n        };\n\n        // Get Seasons\n        $scope.getGalleryGroups = function() {\n\n            $http({\n                method: 'GET',\n                url: admin_path + '/api/gallery-group'\n            }).then(function successCallback(data) {\n                $log.info(data.data);\n                angular.forEach(data.data, function(value, key) {\n                    $scope.galleryGroupList.push({ id: value.id, title: value.title });\n                });\n\n            }, function errorCallback(response) {\n                $log.info(response);\n            });\n\n        };\n\n        $scope.getEnvironments = function() {\n\n            $http({\n                method: 'GET',\n                url: admin_path + '/api/environment'\n            }).then(function successCallback(data) {\n                $log.info(data.data);\n                angular.forEach(data.data, function(value, key) {\n                    $scope.environmentList.push({ id: value.id, title: value.title });\n                });\n            }, function errorCallback(response) {\n                $log.info(response);\n            });\n\n        };\n\n        $scope.getAreas = function() {\n\n            $http({\n                method: 'GET',\n                url: admin_path + '/api/area'\n            }).then(function successCallback(data) {\n                angular.forEach(data.data, function(value, key) {\n                    $scope.areaList.push({ id: value.id, title: value.title });\n                });\n            }, function errorCallback(response) {\n                $log.info(response);\n            });\n\n        };\n\n        // Get List of villas\n        $scope.getVillaList = function() {\n            $http({\n                method: 'GET',\n                url: admin_path + '/api/villa'\n            }).then(function successCallback(data) {\n                $log.info(data.data);\n                angular.forEach(data.data, function(value, key) {\n                    $scope.villaList.push({\n                        id: value.id,\n                        title: value.title,\n                        status: value.status == 1 ? 'Live' : 'Draft',\n                        featured: value.featured == 1 ? 'Featured' : '',\n                        area: value.area.title,\n                        rateUrl: admin_path + '/villa/' + value.id + '/rates',\n                        galleryUrl: admin_path + '/villa/' + value.id + '/gallery',\n                        editUrl: admin_path + '/villa/' + value.id + '/edit',\n                        deleteUrl: admin_path + '/villa/' + value.id\n                    });\n                });\n\n            }, function errorCallback(response) {\n                $log.info(response);\n            });\n        }\n\n        // Get List of special offers\n        $scope.getSpecialOffersList = function() {\n            $http({\n                method: 'GET',\n                url: admin_path + '/api/special-offers'\n            }).then(function successCallback(data) {\n                $log.info(data.data);\n                angular.forEach(data.data, function(value, key) {\n                    $scope.offersList.push({\n                        id: value.id,\n                        title: value.title,\n                        period_end: value.period_end,\n                        villa_name: value.villa.title,\n                        editUrl: admin_path + '/special-offers/' + value.id + '/edit',\n                        deleteUrl: admin_path + '/special-offers/' + value.id\n                    });\n                });\n\n            }, function errorCallback(response) {\n                $log.info(response);\n            });\n        }\n\n        // Get List of villas for special offers\n        $scope.offersVillaList = function() {\n            $http({\n                method: 'GET',\n                url: admin_path + '/api/villa'\n            }).then(function successCallback(data) {\n                $log.info(data.data);\n                angular.forEach(data.data, function(value, key) {\n                    $scope.offersVilla.push({\n                        id: value.id,\n                        title: value.title,\n                        area: value.area.title,\n                    });\n                });\n\n            }, function errorCallback(response) {\n                $log.info(response);\n            });\n        }\n\n        // Post Reviews from admin\n        $scope.postReviews = function(param) {\n            $log.info(param);\n            $http({\n                method: 'POST',\n                url: admin_path + '/reviews',\n                data: param,\n            }).then(function successCallback(data) {\n                if (data.data.status == 1) {\n\n                    // $scope.contentSuccess = true;\n                    // $scope.successMessage = \"Content succesfully added to database\";\n                    // $scope.reviews = {};\n                    $window.location.href = admin_path + '/reviews/?stat=1';\n                } else {\n\n                    $scope.contentFailed = true;\n                    $scope.failedMessage = \"Failed added content\";\n                    $scope.errors = data.data.data;\n                }\n\n            }, function errorCallback(response) {\n                $log.info(response);\n            });\n\n        }\n\n        // Post Testimonial from admin\n        $scope.postTestimonials = function(param) {\n            $log.info(param);\n            $http({\n                method: 'POST',\n                url: admin_path + '/testimonial',\n                data: param,\n            }).then(function successCallback(data) {\n                if (data.data.status == 1) {\n\n                    // $scope.contentSuccess = true;\n                    // $scope.successMessage = \"Content succesfully added to database\";\n                    // $scope.reviews = {};\n                    $window.location.href = admin_path + '/testimonial/?stat=1';\n                } else {\n\n                    $scope.contentFailed = true;\n                    $scope.failedMessage = \"Failed added content\";\n                    $scope.errors = data.data.data;\n                }\n\n            }, function errorCallback(response) {\n                $log.info(response);\n            });\n\n        }\n\n        // $scope.getReviews = function (id) {\n        //     $http({\n        //       method: 'GET',\n        //       url: admin_path + '/api/reviews/'\n        //     }).then(function successCallback(data) {\n\n        //         $log.info(data.data);\n        //         $scope.offers = data.data;\n        //         $scope.offers.StartDate = new Date(data.data.StartDate);\n        //         $scope.offers.EndDate = new Date(data.data.EndDate);\n\n        //     }, function errorCallback(response) {\n        //         $log.info(response);\n        //     });\n        // };\n\n        // Get Reviews\n        $scope.getReviews = function() {\n            $http({\n                method: 'GET',\n                url: admin_path + '/api/reviews'\n            }).then(function successCallback(data) {\n                $log.info(data.data);\n                angular.forEach(data.data, function(value, key) {\n                    $scope.reviewsVilla.push({\n                        id: value.id,\n                        villa: value.villa.title,\n                        guestName: value.guest_name,\n                        period_stay: value.arrival_date,\n                        status: value.status,\n                        approvedUrl: admin_path + '/reviews/' + value.id + '/approve',\n                    });\n                });\n\n                $log.info($scope.reviewsVilla);\n\n            }, function errorCallback(response) {\n                $log.info(response);\n            });\n        }\n\n\n        // Get Testimonial\n        $scope.getTestimonials = function() {\n            $http({\n                method: 'GET',\n                url: admin_path + '/api/testimonial'\n            }).then(function successCallback(data) {\n                $log.info(data.data);\n                angular.forEach(data.data, function(value, key) {\n                    $scope.testimonialVilla.push({\n                        id: value.id,\n                        guestName: value.guest_name,\n                        status: value.status,\n                        approvedUrl: admin_path + '/testimonial/' + value.id + '/approve',\n                    });\n                });\n\n            }, function errorCallback(response) {\n                $log.info(response);\n            });\n        }\n\n        // Post special offers\n        $scope.postVillaOffers = function(param) {\n\n            $log.info(param);\n            $http({\n                method: 'POST',\n                url: admin_path + '/special-offers',\n                data: param,\n            }).then(function successCallback(data) {\n\n                if (data.data.status == 1) {\n\n                    $scope.contentSuccess = true;\n                    $scope.successMessage = \"Content succesfully added to database\";\n                    $scope.offers = {};\n                } else {\n\n                    $scope.contentFailed = true;\n                    $scope.failedMessage = \"Failed added content\";\n                    $scope.errors = data.data.data;\n                }\n\n            }, function errorCallback(response) {\n                $log.info(response);\n            });\n        }\n\n        // Update special offers\n        $scope.editSpecialOffers = function(param) {\n\n            $log.info('param');\n            $log.info(param);\n\n            $http({\n                method: 'PUT',\n                url: admin_path + '/special-offers/' + param.Id,\n                data: param,\n            }).then(function successCallback(data) {\n\n                if (data.data.status == 1) {\n\n                    // $scope.contentSuccess = true;\n                    // $scope.successMessage = \"Content succesfully updated\";\n                    // $scope.villas = {};\n                    $window.location.href = admin_path + '/special-offers/?stat=1';\n                } else {\n\n                    $scope.contentFailed = true;\n                    $scope.failedMessage = \"Failed update content\";\n                    $scope.errors = data.data.data;\n                }\n\n            }, function errorCallback(response) {\n                $log.info(response);\n            });\n\n        }\n\n        // Get Special Offers Information\n        $scope.getSpecialOffers = function(id) {\n            $http({\n                method: 'GET',\n                url: admin_path + '/api/special-offers/' + id + '/edit'\n            }).then(function successCallback(data) {\n\n                $log.info(data.data);\n                $scope.offers = data.data;\n                $scope.offers.StartDate = new Date(data.data.StartDate);\n                $scope.offers.EndDate = new Date(data.data.EndDate);\n\n            }, function errorCallback(response) {\n                $log.info(response);\n            });\n        };\n\n        // Delete Special Offers\n        $scope.offersModal = function(param) {\n\n            var size = 'sm';\n\n            $scope.deleteOffers = param;\n\n            var modalInstance = $uibModal.open({\n                templateUrl: admin_path + '/offers-modal',\n                controller: 'OffersController',\n                size: size,\n                resolve: {\n                    items: function() {\n                        return $scope.deleteOffers;\n                    }\n                }\n            });\n\n            modalInstance.result.then(function(offers_id) {\n\n\n                $http({\n                    method: 'DELETE',\n                    url: admin_path + '/special-offers/' + offers_id,\n                    data: param,\n                }).then(function successCallback(data) {\n\n                    if (data.data.status == 1) {\n                        $window.location.reload();\n                    } else {\n\n                        $scope.contentFailed = true;\n                        $scope.failedMessage = \"Failed delete content\";\n                        $scope.errors = data.data.data;\n                    }\n\n                }, function errorCallback(response) {\n                    $log.info(response);\n                });\n\n            }, function() {\n                $log.info('Modal dismissed at: ' + new Date());\n            });\n        };\n\n        // Delete Reviews\n        $scope.reviewModal = function(param) {\n\n            var size = 'sm';\n\n            $scope.deleteReviews = param;\n\n            var modalInstance = $uibModal.open({\n                templateUrl: admin_path + '/reviews-modal',\n                controller: 'ReviewsController',\n                size: size,\n                resolve: {\n                    items: function() {\n                        return $scope.deleteReviews;\n                    }\n                }\n            });\n\n            modalInstance.result.then(function(reviews_id) {\n\n\n                $http({\n                    method: 'DELETE',\n                    url: admin_path + '/reviews/' + reviews_id,\n                    data: param,\n                }).then(function successCallback(data) {\n\n                    if (data.data.status == 1) {\n                        $window.location.reload();\n                    } else {\n\n                        $scope.contentFailed = true;\n                        $scope.failedMessage = \"Failed delete content\";\n                        $scope.errors = data.data.data;\n                    }\n\n                }, function errorCallback(response) {\n                    $log.info(response);\n                });\n\n            }, function() {\n                $log.info('Modal dismissed at: ' + new Date());\n            });\n        };\n\n        // Delete Testimonial\n        $scope.testimonialModal = function(param) {\n\n            var size = 'sm';\n\n            $scope.deleteTestimonial = param;\n\n            var modalInstance = $uibModal.open({\n                templateUrl: admin_path + '/testimonial-modal',\n                controller: 'TestimonialController',\n                size: size,\n                resolve: {\n                    items: function() {\n                        return $scope.deleteTestimonial;\n                    }\n                }\n            });\n\n            modalInstance.result.then(function(testimonial_id) {\n\n\n                $http({\n                    method: 'DELETE',\n                    url: admin_path + '/testimonial/' + testimonial_id,\n                    data: param,\n                }).then(function successCallback(data) {\n\n                    if (data.data.status == 1) {\n                        $window.location.reload();\n                    } else {\n\n                        $scope.contentFailed = true;\n                        $scope.failedMessage = \"Failed delete content\";\n                        $scope.errors = data.data.data;\n                    }\n\n                }, function errorCallback(response) {\n                    $log.info(response);\n                });\n\n            }, function() {\n                $log.info('Modal dismissed at: ' + new Date());\n            });\n        };\n\n        // Get Villas Information\n        $scope.getVillas = function(id) {\n            $http({\n                method: 'GET',\n                url: admin_path + '/api/villa/' + id + '/edit'\n            }).then(function successCallback(data) {\n\n                $scope.villas = data.data;\n                if ($scope.villas.Status === 0) {\n                    $scope.villas.Status = 'draft';\n                } else {\n                    $scope.villas.Status = 'live';\n                }\n\n                if ($scope.villas.Featured === 1) {\n                    $scope.villas.Featured = true;\n                } else {\n                    $scope.villas.Featured = false;\n                }\n\n            }, function errorCallback(response) {\n                $log.info(response);\n            });\n        };\n\n        // Post Villas\n\n        $scope.postVillas = function(param) {\n\n            $log.info('param');\n            $log.info(param);\n\n\n            $http({\n                method: 'POST',\n                url: admin_path + '/villa',\n                data: param,\n            }).then(function successCallback(data) {\n\n                if (data.data.status == 1) {\n                    $scope.contentFailed = false;\n                    $scope.contentSuccess = true;\n                    $scope.successMessage = \"Content succesfully added to database\";\n                    $scope.villas = {};\n                } else {\n                    $scope.contentSuccess = false;\n                    $scope.contentFailed = true;\n                    $scope.failedMessage = \"Failed added content\";\n                    $scope.errors = data.data.data;\n                }\n\n            }, function errorCallback(response) {\n                $log.info(response);\n            });\n\n        }\n\n\n        $scope.editVillas = function(param) {\n\n            // $log.info('param');\n            // $log.info(param);\n\n            $http({\n                method: 'PUT',\n                url: admin_path + '/villa/' + param.Id,\n                data: param,\n            }).then(function successCallback(data) {\n\n                if (data.data.status == 1) {\n\n                    // $scope.contentSuccess = true;\n                    // $scope.successMessage = \"Content succesfully updated\";\n                    // $scope.villas = {};\n                    $window.location.href = admin_path + '/villa/?stat=1';\n                } else {\n\n                    $scope.contentFailed = true;\n                    $scope.failedMessage = \"Failed update content\";\n                    $scope.errors = data.data.data;\n                }\n\n            }, function errorCallback(response) {\n                $log.info(response);\n            });\n\n        }\n\n        // Delete Villa\n        $scope.villaModal = function(param) {\n\n            var size = 'sm';\n\n            $scope.deleteVilla = param;\n\n            var modalInstance = $uibModal.open({\n                templateUrl: admin_path + '/villa-modal',\n                controller: 'VillaController',\n                size: size,\n                resolve: {\n                    items: function() {\n                        return $scope.deleteVilla;\n                    }\n                }\n            });\n\n            modalInstance.result.then(function(villa_id) {\n\n\n                $http({\n                    method: 'DELETE',\n                    url: admin_path + '/villa/' + villa_id,\n                    data: param,\n                }).then(function successCallback(data) {\n\n                    if (data.data.status == 1) {\n                        $window.location.reload();\n                    } else {\n\n                        $scope.contentFailed = true;\n                        $scope.failedMessage = \"Failed delete content\";\n                        $scope.errors = data.data.data;\n                    }\n\n                }, function errorCallback(response) {\n                    $log.info(response);\n                });\n\n            }, function() {\n                $log.info('Modal dismissed at: ' + new Date());\n            });\n        };\n\n        // Bedroom Villa\n        $scope.getVillaBedrooms = function(id) {\n\n            $http({\n                method: 'GET',\n                url: admin_path + '/api/villa/' + id + '/bedrooms'\n            }).then(function successCallback(data) {\n                angular.forEach(data.data, function(value, key) {\n                    $scope.villaBedroomList.push({ id: value.id, title: value.title });\n                });\n                $scope.getVillaRateList(id);\n            }, function errorCallback(response) {\n                $log.info(response);\n            });\n\n        };\n\n        // Add Rates Form\n        $scope.addRates = function(param, villaId) {\n\n\n            function checkValue(Bedroom, Season) {\n                var getBedroom, getSeason;\n\n                $log.info('Bedroom: ' + Bedroom);\n                $log.info('Season: ' + Season);\n\n                angular.forEach($scope.itemRate, function(value, key) {\n                    getBedroom = value.Bedroom.indexOf(Bedroom);\n                    getSeason = value.Season.indexOf(Season);\n                    $log.info('get bedroom: ' + getBedroom);\n                    $log.info('get season: ' + getSeason);\n                    // Check if Bedroom & Season exist on rates form\n                    if (getBedroom == 0 && getSeason == 0) {\n                        $scope.existBedroomSeason = true;\n                    }\n                });\n            }\n\n            checkValue(param.Bedrooms, param.Seasons);\n\n            if ($scope.existBedroomSeason == true) {\n                $scope.rateFailed = false;\n                $scope.rateMessage = 'Bedroom and season already exist.';\n                $scope.existBedroomSeason = false;\n            } else {\n                $scope.rateFailed = true;\n\n                // if ($scope.itemRate.length < $scope.numSeasons) {\n                $log.info(getSeasonsTitle(param.Seasons));\n                $scope.itemRate.push({\n                    VillaId: villaId,\n                    Bedroom: param.Bedrooms,\n                    Season: param.Seasons,\n                    StartDate: null,\n                    EndDate: null,\n                    MinimumStay: null,\n                    Tax: null,\n                    Plus: null,\n                    Rate: null,\n                    SeasonTitle: getSeasonsTitle(param.Seasons),\n                    BedroomTitle: getBedroomsTitle(param.Bedrooms),\n                    RateId: 0,\n                });\n                // }\n            }\n\n            function getSeasonsTitle(id) {\n                var title = null;\n                angular.forEach($scope.seasonList, function(value, key) {\n                    if (value.id == id) {\n                        title = value.title;\n                    }\n                });\n\n                return title;\n            }\n\n            function getBedroomsTitle(id) {\n                var title = null;\n                angular.forEach($scope.villaBedroomList, function(value, key) {\n                    if (value.id == id) {\n                        title = value.title;\n                    }\n                });\n\n                return title;\n            }\n\n        }\n\n        // Save Rate\n        $scope.saveRates = function(param) {\n            $log.info(param);\n\n            $http({\n                method: 'POST',\n                url: admin_path + '/rates',\n                data: param,\n            }).then(function successCallback(data) {\n\n                $log.info(data);\n\n                if (data.data.status == 1) {\n\n                    $scope.rateFailed = true;\n                    $scope.rateSuccess = false;\n                    $scope.rateMessage = data.data.data;\n                    $window.location.href = admin_path + '/villa/' + param.VillaId + '/rates';\n                    // $scope.villas = {};\n                } else if (data.data.status == 0) {\n\n                    $scope.rateFailed = false;\n                    $scope.rateSuccess = true;\n                    $scope.rateMessage = \"Failed added rate\";\n                    $scope.errors = data.data.data;\n                } else if (data.data.status == 3) {\n\n                    $scope.rateFailed = false;\n                    $scope.rateSuccess = true;\n                    $scope.rateMessage = \"Failed added rate\";\n                    $scope.errors = data.data.data;\n                } else if (data.data.status == 4) {\n                    $scope.rateFailed = true;\n                    $scope.rateSuccess = false;\n                    $scope.rateMessage = data.data.data;\n                }\n\n            }, function errorCallback(response) {\n                $log.info(response);\n            });\n        }\n\n\n\n\n        $scope.addImages = function(id, count) {\n\n            if (count < 6) {\n                $scope.ifImages = false;\n                $scope.itemGallery.push({\n                    VillaId: id,\n                    Caption: null,\n                    Group: null,\n                    MainImage: false,\n                    Images: null,\n                });\n            }\n        };\n\n        // Gallery list by villa id\n        $scope.listGallery = function(id) {\n\n            // function insert(str, sub, pos) {\n            //     return str.slice(0, pos) + sub + str.slice(pos);\n            // }\n\n            $http({\n                method: 'GET',\n                url: admin_path + '/api/gallery/' + id + '/list'\n            }).then(function successCallback(data) {\n                $log.info(data.data);\n                angular.forEach(data.data, function(value, key) {\n                    $scope.galleryList.push({\n                        Id: value.id,\n                        Caption: value.caption,\n                        Image: value.path,\n                        Group: value.group_id,\n                        MainImage: value.main_image == 1 ? true : false,\n                    });\n                });\n            }, function errorCallback(response) {\n                $log.info(response);\n            });\n\n        }\n\n        $scope.editGallery = function(param) {\n\n\n            $http({\n                method: 'PUT',\n                url: admin_path + '/gallery/' + param.Id,\n                data: param,\n            }).then(function successCallback(data) {\n\n                if (data.data.status == 1) {\n                    // $scope.contentSuccess = true;\n                    // $scope.successMessage = \"Content succesfully updated\";\n                    // $scope.villas = {};\n                    $window.location.reload();\n                } else {\n\n                    $scope.contentFailed = true;\n                    $scope.failedMessage = \"Failed update content\";\n                    $scope.errors = data.data.data;\n                }\n\n            }, function errorCallback(response) {\n                $log.info(response);\n            });\n\n        }\n\n        $scope.galleryModal = function(param) {\n\n            var size = 'sm';\n\n            $scope.deleteGallery = param;\n\n            var modalInstance = $uibModal.open({\n                templateUrl: admin_path + '/gallery-modal',\n                controller: 'GalleryController',\n                size: size,\n                resolve: {\n                    items: function() {\n                        return $scope.deleteGallery;\n                    }\n                }\n            });\n\n            modalInstance.result.then(function(gallery_id) {\n\n\n                $http({\n                    method: 'DELETE',\n                    url: admin_path + '/gallery/' + gallery_id,\n                    data: param,\n                }).then(function successCallback(data) {\n\n                    if (data.data.status == 1) {\n                        $window.location.reload();\n                    } else {\n\n                        $scope.contentFailed = true;\n                        $scope.failedMessage = \"Failed delete content\";\n                        $scope.errors = data.data.data;\n                    }\n\n                }, function errorCallback(response) {\n                    $log.info(response);\n                });\n\n            }, function() {\n                $log.info('Modal dismissed at: ' + new Date());\n            });\n        };\n\n        // Upload and store image input\n        $scope.doUpload = function(files) {\n\n            // var getLength = $scope.itemGallery.length;\n            $log.info(files);\n            // $log.info(getLength);\n\n            if (files && files.length) {\n                $scope.loading = true;\n                for (var i = 0; i < files.length; i++) {\n                    var file = files[i].Images;\n                    Upload.upload({\n                        url: admin_path + '/gallery',\n                        file: file,\n                        fields: {\n                            'id': files[i].VillaId,\n                            'caption': files[i].Caption,\n                            'group_id': files[i].Group,\n                            'main_image': files[i].MainImage\n                        }\n                    }).progress(function(evt) {\n                        $scope.loading = false;\n                    }).success(function(resp) {\n                        $scope.loading = false;\n\n                        if (resp.status === 1) {\n                            $window.location.reload();\n                        }\n\n                    }).error(function() {\n                        $scope.loading = false;\n                        $log.info('error upload image');\n                    });\n                }\n            }\n        }\n\n        $scope.countries = function() {\n\n\n            $http({\n                method: 'GET',\n                url: admin_path + '/api/countries'\n            }).then(function successCallback(data) {\n\n                angular.forEach(data.data, function(value, key) {\n                    $scope.countryList.push({ id: key, name: value });\n\n                });\n\n            }, function errorCallback(response) {\n                $log.info(response);\n            });\n\n        };\n\n    }\n]);\n\n// Profile Controller\nangular.module('backend').controller('profileController', ['$scope', '$http', '$log', 'admin_path', '$filter', '$uibModal', 'Upload', '$window',\n    function($scope, $http, $log, admin_path, $filter, $uibModal, Upload, $window) {\n\n        $scope.countryList = [];\n        $scope.maxDate = $scope.maxDate ? null : new Date();\n\n        $scope.openDOB = function($event) {\n            $event.preventDefault();\n            $event.stopPropagation();\n            $scope.datepicker = { 'openedDOB': true };\n        };\n\n        $scope.dateOptions = {\n            formatYear: 'yy',\n            startingDay: 1\n        };\n\n        $scope.countries = function() {\n\n\n            $http({\n                method: 'GET',\n                url: admin_path + '/api/countries'\n            }).then(function successCallback(data) {\n\n                angular.forEach(data.data, function(value, key) {\n                    $scope.countryList.push({ id: key, name: value });\n\n                });\n\n            }, function errorCallback(response) {\n                $log.info(response);\n            });\n\n        };\n\n        $scope.getProfile = function(id) {\n\n            $scope.profile = {};\n\n            $http({\n                method: 'GET',\n                url: admin_path + '/profile/' + id + '/edit'\n            }).then(function successCallback(data) {\n\n                angular.forEach(data.data, function(value, key) {\n                    $scope.profile = value;\n                    $scope.profile.dob = new Date(value.dob);\n                });\n\n            }, function errorCallback(response) {\n                $log.info(response);\n            });\n\n            $scope.countries();\n        };\n\n        $scope.updateProfile = function(param, id) {\n\n            param.dob = $filter('date')(param.dob, 'yyyy-MM-dd');\n\n            $http({\n                method: 'PUT',\n                url: admin_path + '/profile/' + id,\n                data: param\n            }).then(function successCallback(data) {\n\n                if (data.data.status === 1) {\n                    $scope.alertProfile = true;\n                    $scope.alertMessage = 'Profile Updated!';\n                }\n                $log.info(data.data.status);\n            }, function errorCallback(response) {\n                $log.info(responses);\n            });\n\n        };\n\n        $scope.updatePassword = function(param, id) {\n\n            $scope.alertPassword = false;\n            $scope.alertPasswordWrong = false;\n\n            $http({\n                method: 'PUT',\n                url: admin_path + '/profile/changepwd/' + id,\n                data: param\n            }).then(function successCallback(data) {\n                $log.info(data);\n                if (data.data.status === 1) {\n                    $scope.alertPassword = true;\n                    $scope.alertMessage = 'Password updated!';\n                    $scope.password.current = null;\n                    $scope.password.new1 = null;\n                    $scope.password.new2 = null;\n                } else if (data.data.status === 2) {\n                    $scope.alertPasswordWrong = true;\n                    $scope.alertMessageWrong = 'Your current password is wrong!';\n                }\n\n            }, function errorCallback(response) {\n                $log.info(responses);\n            });\n        };\n\n        $scope.uploadPhoto = function() {\n            $scope.isUpload = true;\n        }\n\n        $scope.cancelPhoto = function() {\n            $scope.isUpload = false;\n        }\n\n        $scope.doUpload = function(files, id) {\n            $scope.loading = true;\n            if (files && files.length) {\n                for (var i = 0; i < files.length; i++) {\n                    var file = files[i];\n                    Upload.upload({\n                        url: admin_path + '/profile',\n                        file: file,\n                        fields: {\n                            'id': id\n                        }\n                    }).progress(function(evt) {\n                        $scope.loading = false;\n                        $log.info('evt');\n                        $log.info(evt);\n                    }).success(function(resp) {\n                        $scope.loading = false;\n                        $log.info('resp2');\n                        $log.info(resp);\n\n                        if (resp.status === 1) {\n                            $window.location.reload();\n                        }\n                        //refresh setting from API\n                        //$state.reload();\n                    }).error(function() {\n                        $scope.loading = false;\n                        //$log.info('error upload image');\n                    });\n                }\n            }\n        };\n\n\n    }\n]);\n\n// Modal Instance\nangular.module('backend').controller('GalleryController', ['$scope', 'admin_path', '$uibModalInstance', '$log', 'items',\n    function($scope, admin_path, $uibModalInstance, $log, items) {\n\n        $scope.ok = function() {\n            $uibModalInstance.close(items.Id);\n        };\n\n        $scope.cancel = function() {\n            $uibModalInstance.dismiss('cancel');\n        };\n\n\n    }\n]);\n\n// Modal Instance\nangular.module('backend').controller('VillaController', ['$scope', 'admin_path', '$uibModalInstance', '$log', 'items',\n    function($scope, admin_path, $uibModalInstance, $log, items) {\n\n        $scope.ok = function() {\n            $uibModalInstance.close(items.id);\n        };\n\n        $scope.cancel = function() {\n            $uibModalInstance.dismiss('cancel');\n        };\n\n\n    }\n]);\n\n// Modal Instance\nangular.module('backend').controller('OffersController', ['$scope', 'admin_path', '$uibModalInstance', '$log', 'items',\n    function($scope, admin_path, $uibModalInstance, $log, items) {\n\n        $scope.ok = function() {\n            $uibModalInstance.close(items.id);\n        };\n\n        $scope.cancel = function() {\n            $uibModalInstance.dismiss('cancel');\n        };\n\n\n    }\n]);\n\n// Modal Instance\nangular.module('backend').controller('ReviewsController', ['$scope', 'admin_path', '$uibModalInstance', '$log', 'items',\n    function($scope, admin_path, $uibModalInstance, $log, items) {\n\n        $scope.ok = function() {\n            $uibModalInstance.close(items.id);\n        };\n\n        $scope.cancel = function() {\n            $uibModalInstance.dismiss('cancel');\n        };\n\n\n    }\n]);\n\n// Modal Instance\nangular.module('backend').controller('TestimonialController', ['$scope', 'admin_path', '$uibModalInstance', '$log', 'items',\n    function($scope, admin_path, $uibModalInstance, $log, items) {\n\n        $scope.ok = function() {\n            $uibModalInstance.close(items.id);\n        };\n\n        $scope.cancel = function() {\n            $uibModalInstance.dismiss('cancel');\n        };\n\n\n    }\n]);\n/*******************************************************************\n\t\t\t\t\t\tDirectives\n*******************************************************************/\n\nangular.module('backend').filter('propsFilter', function() {\n    return function(items, props) {\n        var out = [];\n\n        if (angular.isArray(items)) {\n            var keys = Object.keys(props);\n\n            items.forEach(function(item) {\n                var itemMatches = false;\n\n                for (var i = 0; i < keys.length; i++) {\n                    var prop = keys[i];\n                    var text = props[prop].toLowerCase();\n                    if (item[prop].toString().toLowerCase().indexOf(text) !== -1) {\n                        itemMatches = true;\n                        break;\n                    }\n                }\n\n                if (itemMatches) {\n                    out.push(item);\n                }\n            });\n        } else {\n            // Let the output be the input untouched\n            out = items;\n        }\n\n        return out;\n    };\n});\n\n// Permission Directive\n// angular.module('backend').directive('permissionavail', ['$q', '$http', '$log', 'admin_path', function ($q, $http, $log, admin_path) {\n//     return {\n//         require: 'ngModel',\n//         link: function(scope, elm, attrs, ctrl) {\n//             ctrl.$asyncValidators.permissionavail = function(modelValue) {\n//                 var deferred = $q.defer();\n//                 $http({\n//                     method  : 'GET',\n//                     url     : admin_path + '/api/permissions/' + modelValue + '/exist'\n//                     }).\n//                     success(function(data) {\n\n//                     \tif (data.error === false && data.exist === false) {\n//                             //user still available\n//                             deferred.resolve();\n//                         } else {\n//                             deferred.reject();\n//                         }\n//                     }).\n//                     error(function() {\n//                         deferred.reject();\n//                 });\n//                 return deferred.promise;\n//             };\n//         }\n//     };   \n// }]);\n\n// Permission Directive\n// angular.module('backend').directive('settingavail', ['$q', '$http', '$log', 'admin_path', function ($q, $http, $log, admin_path) {\n//     return {\n//         require: 'ngModel',\n//         link: function(scope, elm, attrs, ctrl) {\n//             ctrl.$asyncValidators.settingavail = function(modelValue) {\n//                 var deferred = $q.defer();\n//                 $http({\n//                     method  : 'GET',\n//                     url     : admin_path + '/api/settings/' + modelValue + '/exist'\n//                     }).\n//                     success(function(data) {\n\n//                     \tif (data.error === false && data.exist === false) {\n//                             //user still available\n//                             deferred.resolve();\n//                         } else {\n//                             deferred.reject();\n//                         }\n//                     }).\n//                     error(function() {\n//                         deferred.reject();\n//                 });\n//                 return deferred.promise;\n//             };\n//         }\n//     };   \n// }]);\n\n// Villa Name Directive\nangular.module('backend').directive('villaavail', ['$q', '$http', '$log', 'admin_path', function($q, $http, $log, admin_path) {\n    return {\n        require: 'ngModel',\n        link: function(scope, elm, attrs, ctrl) {\n            ctrl.$asyncValidators.villaavail = function(modelValue) {\n                var deferred = $q.defer();\n                $http({\n                    method: 'GET',\n                    url: admin_path + '/api/villa/' + modelValue + '/exist'\n                }).\n                success(function(data) {\n\n                    if (data.error === false && data.exist === false) {\n                        //user still available\n                        deferred.resolve();\n                    } else {\n                        deferred.reject();\n                    }\n                }).\n                error(function() {\n                    deferred.reject();\n                });\n                return deferred.promise;\n            };\n        }\n    };\n}]);\n\n// Demographic Directive\n// angular.module('backend').directive('demographicavail', ['$q', '$http', '$log', 'admin_path', function ($q, $http, $log, admin_path) {\n//     return {\n//         require: 'ngModel',\n//         link: function(scope, elm, attrs, ctrl) {\n//             ctrl.$asyncValidators.demographicavail = function(modelValue) {\n//                 var deferred = $q.defer();\n//                 var valueFiltered = modelValue.replace(/\\//g, '-');\n\n//                 $http({\n//                     method  : 'GET',\n//                     url     : admin_path + '/api/demographic/' + valueFiltered + '/exist'\n//                     }).\n//                     success(function(data) {\n\n//                         if (data.error === false && data.exist === false) {\n//                             //user still available\n//                             deferred.resolve();\n//                         } else {\n//                             deferred.reject();\n//                         }\n//                     }).\n//                     error(function() {\n//                         deferred.reject();\n//                 });\n//                 return deferred.promise;\n//             };\n//         }\n//     };   \n// }]);\n\n// Content Format Directive\n// angular.module('backend').directive('contentformatavail', ['$q', '$http', '$log', 'admin_path', function ($q, $http, $log, admin_path) {\n//     return {\n//         require: 'ngModel',\n//         link: function(scope, elm, attrs, ctrl) {\n//             ctrl.$asyncValidators.contentformatavail = function(modelValue) {\n//                 var deferred = $q.defer();\n//                 var valueFiltered = modelValue.replace(/\\//g, '-');\n\n//                 $http({\n//                     method  : 'GET',\n//                     url     : admin_path + '/api/content-format/' + valueFiltered + '/exist'\n//                     }).\n//                     success(function(data) {\n\n//                         if (data.error === false && data.exist === false) {\n//                             //user still available\n//                             deferred.resolve();\n//                         } else {\n//                             deferred.reject();\n//                         }\n//                     }).\n//                     error(function() {\n//                         deferred.reject();\n//                 });\n//                 return deferred.promise;\n//             };\n//         }\n//     };   \n// }]);\n\n// Format right Directive\n// angular.module('backend').directive('formatrightavail', ['$q', '$http', '$log', 'admin_path', function ($q, $http, $log, admin_path) {\n//     return {\n//         require: 'ngModel',\n//         link: function(scope, elm, attrs, ctrl) {\n//             ctrl.$asyncValidators.formatrightavail = function(modelValue) {\n//                 var deferred = $q.defer();\n//                 var valueFiltered = modelValue.replace(/\\//g, '-');\n\n//                 $http({\n//                     method  : 'GET',\n//                     url     : admin_path + '/api/format-right/' + valueFiltered + '/exist'\n//                     }).\n//                     success(function(data) {\n\n//                         if (data.error === false && data.exist === false) {\n//                             //user still available\n//                             deferred.resolve();\n//                         } else {\n//                             deferred.reject();\n//                         }\n//                     }).\n//                     error(function() {\n//                         deferred.reject();\n//                 });\n//                 return deferred.promise;\n//             };\n//         }\n//     };   \n// }]);\n\n// Language Directive\n// angular.module('backend').directive('languageavail', ['$q', '$http', '$log', 'admin_path', function ($q, $http, $log, admin_path) {\n//     return {\n//         require: 'ngModel',\n//         link: function(scope, elm, attrs, ctrl) {\n//             ctrl.$asyncValidators.languageavail = function(modelValue) {\n//                 var deferred = $q.defer();\n//                 var valueFiltered = modelValue.replace(/\\//g, '-');\n\n//                 $http({\n//                     method  : 'GET',\n//                     url     : admin_path + '/api/language/' + valueFiltered + '/exist'\n//                     }).\n//                     success(function(data) {\n\n//                         if (data.error === false && data.exist === false) {\n//                             //user still available\n//                             deferred.resolve();\n//                         } else {\n//                             deferred.reject();\n//                         }\n//                     }).\n//                     error(function() {\n//                         deferred.reject();\n//                 });\n//                 return deferred.promise;\n//             };\n//         }\n//     };   \n// }]);\n\n// Role Directive\n// angular.module('backend').directive('roleavail', ['$q', '$http', '$log', 'admin_path',  function ($q, $http, $log, admin_path) {\n//     return {\n//         require: 'ngModel',\n//         link: function(scope, elm, attrs, ctrl) {\n//             ctrl.$asyncValidators.roleavail = function(modelValue) {\n//                 var deferred = $q.defer();\n//                 $http({\n//                     method  : 'GET',\n//                     url     : admin_path + '/api/roles/' + modelValue + '/exist'\n//                     }).\n//                     success(function(data) {\n\n//                     \tif (data.error === false && data.exist === false) {\n//                             //user still available\n//                             deferred.resolve();\n//                         } else {\n//                             deferred.reject();\n//                         }\n//                     }).\n//                     error(function() {\n//                         deferred.reject();\n//                 });\n//                 return deferred.promise;\n//             };\n//         }\n//     };   \n// }]);\n\n// angular.module('backend').directive('compare', function() {\n//         return {\n//             require: 'ngModel',\n//             scope: {\n//                 otherModelValue: '=compare'\n//             },\n//             link: function(scope, elm, attrs, ctrl) {\n//                 ctrl.$validators.compare = function(modelValue) {\n//                     return modelValue === scope.otherModelValue;\n//                 };\n//                 scope.$watch('otherModelValue', function() {\n//                     ctrl.$validate();\n//                 });\n//             }\n//         };   \n//     });"]}